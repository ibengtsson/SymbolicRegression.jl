name: CI

on:
  push:
    branches:
      - master
    paths:
      - "**"
  pull_request:
    branches:
      - master
    paths:
      - "**"
  workflow_dispatch:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  test:
    name: Julia ${{ matrix.julia-version }}-${{ matrix.os }}-${{ matrix.test }}-${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 240
    strategy:
      fail-fast: false
      matrix:
        test:
          - "part1"
          - "part2"
          - "part3"
        julia-version:
          - "1.10"
          - "1"
        os:
          - ubuntu-latest
        include:
          - os: windows-latest
            julia-version: "1"
            test: "part1"
          - os: windows-latest
            julia-version: "1"
            test: "part2"
          - os: windows-latest
            julia-version: "1"
            test: "part3"
          - os: macOS-latest
            julia-version: "1"
            test: "part1"
          - os: macOS-latest
            julia-version: "1"
            test: "part2"
          - os: macOS-latest
            julia-version: "1"
            test: "part3"
          - os: ubuntu-latest
            julia-version: "1"
            test: "enzyme"
          - os: ubuntu-latest
            julia-version: "1"
            test: "jet"

    steps:
      - uses: actions/checkout@v4
      - name: "Set up Julia"
        uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.julia-version }}
      - name: "Cache dependencies"
        uses: julia-actions/cache@v2
        with:
          cache-name: julia-cache;workflow=${{ github.workflow }};job=${{ github.job }};os=${{ matrix.os }};julia=${{ matrix.julia-version }};project=${{ hashFiles('**/Project.toml') }}
      - name: "Build package"
        uses: julia-actions/julia-buildpkg@v1
      - name: "Install Enzyme (if needed)"
        if: matrix.test == 'enzyme'
        run: julia --color=yes --project=test -e 'import Pkg; Pkg.add("Enzyme")'
      - name: "Install JET (if needed)"
        if: matrix.test == 'jet'
        run: julia --color=yes --project=test -e 'import Pkg; Pkg.add("JET")'
      - name: "Run tests"
        env:
          SYMBOLIC_REGRESSION_TEST_SUITE: ${{ matrix.test }}
        run: |
          julia --color=yes -e 'import Pkg; Pkg.add("Coverage")'
          julia --color=yes --threads=auto --check-bounds=yes --depwarn=yes --code-coverage=user -e 'import Coverage; import Pkg; Pkg.activate("."); Pkg.test(coverage=true)'
          julia --color=yes coverage.jl
        shell: bash
      - name: "Coveralls"
        uses: coverallsapp/github-action@v2
        with:
          path-to-lcov: lcov.info
          parallel: true
          flag-name: julia-${{ matrix.julia-version }}-${{ matrix.os }}-${{ matrix.test }}-${{ github.event_name }}

  coveralls:
    name: Indicate completion to coveralls
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Finish
        uses: coverallsapp/github-action@v2
        with:
          parallel-finished: true
